{"version":3,"sources":["reducers.js","export.js","table.js","story-name.js","App.js","serviceWorker.js","index.js"],"names":["initialState","storyName","stories","id","uuidv4","role","action","purpose","tests","text","getEmptyStory","getEmptyTest","generateMD","data","name","result","forEach","story","push","tableLine","map","test","testId","join","TabPanel","props","children","value","index","other","hidden","aria-labelledby","Box","p","Typography","useSelector","state","markdown","React","tabValue","setTabValue","handleChange","event","Paper","AppBar","position","color","Tabs","onChange","aria-label","Tab","label","TextField","variant","multiline","style","width","dangerouslySetInnerHTML","__html","marked","getRowId","row","BooleanFormatter","BooleanTypeProvider","formatterComponent","DragHandle","SortableHandle","Tooltip","title","enterDelay","cursor","FocusableCell","onClick","restProps","column","Cell","tabIndex","onFocus","RowDetail","dispatch","useDispatch","useState","setText","addTest","useCallback","type","storyId","deleteTest","paddingBottom","length","Chip","key","onDelete","marginRight","e","target","Button","commandComponents","add","onExecute","IconButton","textAlign","delete","window","confirm","Command","CommandButton","columns","getCellValue","editingStateColumnExtensions","columnName","editingEnabled","tableColumnExtensions","wordWrapEnabled","align","editingCells","setEditingCells","addEmptyStory","onSortEnd","oldIndex","newIndex","arrayMove","Body","TableBody","SortableContainer","Table","useDragHandle","rows","for","onCommitChanges","added","changed","deleted","onEditingCellsChange","addedRows","onAddedRowsChange","columnExtensions","cellComponent","bodyComponent","rowComponent","TableRow","SortableElement","Row","indexOf","selectTextOnEditStart","showAddCommand","showDeleteCommand","commandComponent","contentComponent","inputProps","select","editable","setEditable","onBlur","onKeyDown","keyCode","autoFocus","App","exportMD","blob","Blob","saveAs","className","height","backgroundColor","Toolbar","flexGrow","display","padding","paddingLeft","Boolean","location","hostname","match","store","createStore","trim","deletedSet","Set","nextStories","filter","has","reduce","acc","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cd3fa54.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst defaultStoryName = 'Untitled Stories';\n\nconst initialState = {\n  storyName: defaultStoryName,\n  stories: [{\n    id: uuidv4(),\n    role: 'Story Tailer',\n    action: 'make stories',\n    purpose: 'make my work more convenient',\n    tests: [{\n      id: uuidv4(),\n      text: 'Open Story Creator App'\n    }, {\n      id: uuidv4(),\n      text: 'Enjoy 😃',\n    }]\n  }],\n}\n\nconst getEmptyStory = () => ({\n  id: uuidv4(),\n  role: '',\n  action: '',\n  purpose: '',\n  tests: [],\n});\n\nconst getEmptyTest = (text) => ({\n  id: uuidv4(),\n  text,\n});\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'setStoryName': {\n      if (action.storyName.trim() === '') {\n        return { ...state, storyName: defaultStoryName };\n      }\n      return { ...state, storyName: action.storyName };\n    }\n    case 'setStories': {\n      return { ...state, stories: action.stories };\n    }\n    case 'addStory': { // OK\n      return {\n        ...state,\n        stories: [...state.stories, getEmptyStory()] \n      };\n    }\n    case 'deleteStory': { // OK\n      const deletedSet = new Set(action.deleted);\n      const nextStories = state.stories.filter(row => !deletedSet.has(row.id));\n\n      return {\n        ...state,\n        stories: nextStories,\n      };\n    }\n    case 'changeStory': { // OK\n      const nextStories = state.stories.map(row => (action.changed[row.id] ? { ...row, ...action.changed[row.id] } : row));\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    case 'addTest': { //OK\n      const nextStories = state.stories.reduce((acc, story) => {\n        if (action.storyId === story.id) {\n          story.tests.push(getEmptyTest(action.text));\n        }\n        acc.push(story);\n        return acc;\n      }, []);\n\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    case 'deleteTest': { // OK\n      const nextStories = state.stories.map((story) => {\n        if (story.id === action.storyId) {\n          story.tests = story.tests.filter(test => test.id !== action.testId);\n        } return story;\n      });\n\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    default:\n      return state;\n  }\n}","import * as React from 'react';\n// import { saveAs } from 'file-saver';\nimport { useSelector } from 'react-redux';\n// import Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport marked from 'marked';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import TabPanel from '@material-ui/core/TabPanel';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n// { name: 'id', title: '#id' },\n// { name: 'role', title: 'Role' },\n// { name: 'action', title: 'Action' },\n// { name: 'purpose', title: 'Purpose' },\n\nexport const generateMD = (data, name) => {\n  const result = [`## ${name}\\n\\n#### User Stories\\n`];\n\n  data.forEach((story, id) => {\n    result.push(`${id + 1}. As a ${story.role}, I want to be able to ${story.action}, so that I can ${story.purpose}.`);\n  });\n\n  result.push('\\n#### Acceptance Criteria & Tests');\n  result.push('\\n| ID | Criteria | Test |');\n  result.push('| -- | :------- | :--- |');\n\n  data.forEach((story, id) => {\n    const tableLine = `| ${id + 1} | Capability to ${story.action}. | ${story.tests.map((test, testId) => `${testId + 1}. ${test.text}. `).join('')} |`;\n    result.push(tableLine);\n  });\n\n  return result.join('\\n');\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default () => {\n  const { stories, storyName } = useSelector(state => ({\n    stories: state.stories, storyName: state.storyName,\n  }));\n  const markdown = generateMD(stories, storyName);\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleChange = React.useCallback((event, value) => setTabValue(value), [setTabValue]);\n\n  // const exportMD = React.useCallback(() => {\n  //   const filename = \"data.md\";\n\n  //   const blob = new Blob([markdown], {\n  //     type: 'text/plain;charset=utf-8'\n  //   });\n\n  //   saveAs(blob, filename);\n  // }, [markdown]);\n\n  return (\n    <React.Fragment>\n      <Paper>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Markdown\" />\n            <Tab label=\"Preview\" />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={tabValue} index={0}>\n          <TextField value={markdown} variant=\"outlined\" multiline style={{ width: '100%' }} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <div dangerouslySetInnerHTML={{__html: marked(markdown) }} />\n        </TabPanel>\n      </Paper>\n      {/* <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: '14px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={exportMD}>\n          Export md file\n        </Button>\n      </div> */}\n    </React.Fragment>\n  );\n};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { EditingState, RowDetailState, DataTypeProvider } from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableEditColumn,\n  TableRowDetail,\n  TableInlineCellEditing,\n} from '@devexpress/dx-react-grid-material-ui';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  SortableContainer,\n  SortableHandle,\n  SortableElement,\n  arrayMove\n} from \"react-sortable-hoc\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Done from '@material-ui/icons/Done';\nimport Close from '@material-ui/icons/Close';\nimport DragIndicator from '@material-ui/icons/DragIndicator';\nimport PostAdd from '@material-ui/icons/PostAdd';\nimport Delete from '@material-ui/icons/Delete';\n\nconst getRowId = row => row.id;\n\nconst BooleanFormatter = ({ value }) => value ? <Done /> : <Close />;\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BooleanFormatter}\n    {...props}\n  />\n);\n\nconst DragHandle = SortableHandle(({ style }) => (\n  <Tooltip title=\"Drag to reorder\" enterDelay={400}>\n    <span style={{ ...style, cursor: \"move\" }}><DragIndicator /></span>\n  </Tooltip>\n));\n\nconst FocusableCell = ({ onClick, ...restProps }) => {\n  if (restProps.column.name === \"drag\") {\n    return (\n      <Table.Cell {...restProps}>\n        <DragHandle />\n      </Table.Cell>\n    );\n  }\n  return <Table.Cell {...restProps} tabIndex={0} onFocus={onClick} />;\n}\n\nconst RowDetail = ({ row }) => {\n  const dispatch = useDispatch();\n  const [text, setText] = React.useState('');\n  const addTest = React.useCallback(() => {\n    setText('');\n    dispatch({ type: 'addTest', storyId: row.id, text });\n  }, [row, text, dispatch]);\n  const deleteTest = React.useCallback((testId) => dispatch({ type: 'deleteTest', testId, storyId: row.id }), [row, dispatch]);\n\n  return (\n    <div>\n      <div style={{ paddingBottom: '8px' }}>\n        {row.tests.length ? row.tests.map(test => (\n          <Chip\n            key={test.id}\n            label={test.text}\n            onDelete={() => deleteTest(test.id)}\n            style={{ marginRight: '8px' }}\n          />\n        )) : (\n          <p>\n            No tests here.\n          </p>\n        )}\n      </div>\n\n      <div>\n        <TextField variant=\"filled\" value={text} onChange={e => setText(e.target.value)} />\n        <Button color=\"primary\" onClick={addTest}>\n          Add\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst AddButton = ({ onExecute }) => (\n  <Tooltip title=\"Create a story\" enterDelay={500}>\n    <IconButton\n      style={{ textAlign: 'center' }}\n      onClick={onExecute}\n    >\n      <PostAdd\n        style={{ color: '#E91E63' }}\n      />\n    </IconButton>\n  </Tooltip>\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <Tooltip title=\"Delete the story\" enterDelay={500}>\n    <IconButton\n      onClick={() => {\n        // eslint-disable-next-line\n        if (window.confirm('Are you sure you want to delete this story?')) {\n          onExecute();\n        }\n      }}\n    >\n      <Delete />\n    </IconButton>\n  </Tooltip>\n);\n\nconst commandComponents = {\n  add: AddButton,\n  delete: DeleteButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const CommandButton = commandComponents[id];\n  return (\n    <CommandButton\n      onExecute={onExecute}\n    />\n  );\n};\n\nconst columns = [\n  { name: 'role', title: 'Role' },\n  { name: 'action', title: 'Action' },\n  { name: 'purpose', title: 'Purpose' },\n  { name: 'tests', title: 'Tests', getCellValue: row => row.tests.length > 0 ? true : false },\n  { name: 'drag', title: ' ' },\n];\n\nconst editingStateColumnExtensions = [\n  { columnName: 'tests', editingEnabled: false },\n];\n\nconst tableColumnExtensions = [\n  { columnName: 'role', width: 150, wordWrapEnabled: true },\n  { columnName: 'action', wordWrapEnabled: true },\n  { columnName: 'purpose', wordWrapEnabled: true },\n  { columnName: 'tests', width: 55, align: 'center' },\n  { columnName: 'drag', width: 40, align: 'center' },\n];\n\nexport default () => {\n  const stories = useSelector(state => state.stories);\n  const dispatch = useDispatch();\n  const [editingCells, setEditingCells] = useState([]);\n  const addEmptyStory = React.useCallback(() => dispatch({ type: 'addStory' }), [dispatch]);\n  const onSortEnd = React.useCallback(({ oldIndex, newIndex }) =>\n    dispatch({ type: 'setStories', stories: arrayMove(stories, oldIndex, newIndex) }), [dispatch, stories]);\n  const Body = React.useCallback((props) => {\n    const TableBody = SortableContainer(Table.TableBody);\n    return (\n      <TableBody {...props} onSortEnd={onSortEnd} useDragHandle />\n    );\n  }, [onSortEnd]);\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    if (changed) {\n      dispatch({ type: 'changeStory', changed });\n    }\n    if (deleted) {\n      dispatch({ type: 'deleteStory', deleted });\n    }\n  };\n\n  return (\n    <Paper>\n      <Grid\n        rows={stories}\n        columns={columns}\n        getRowId={getRowId}\n      >\n        <BooleanTypeProvider for={['tests']} />\n\n        <RowDetailState />\n        <EditingState\n          onCommitChanges={commitChanges}\n          editingCells={editingCells}\n          onEditingCellsChange={setEditingCells}\n          addedRows={[]}\n          onAddedRowsChange={addEmptyStory}\n          columnExtensions={editingStateColumnExtensions}\n        />\n        <Table\n          columnExtensions={tableColumnExtensions}\n          cellComponent={FocusableCell}\n          bodyComponent={Body}\n          rowComponent={({ row, ...restProps }) => {\n            const TableRow = SortableElement(Table.Row);\n            return <TableRow {...restProps} row={row} index={stories.indexOf(row)} />;\n          }}  \n        />\n        <TableHeaderRow />\n        <TableInlineCellEditing selectTextOnEditStart />\n        <TableEditColumn\n          width={70}\n          showAddCommand\n          showDeleteCommand\n          commandComponent={Command}\n        />\n        <TableRowDetail\n          contentComponent={RowDetail}\n        />\n      </Grid>\n    </Paper>\n  );\n};\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst onFocus = e => e.target.select();\nconst inputProps = { onFocus };\n\nexport default () => {\n  const storyName = useSelector(state => state.storyName);\n  const dispatch = useDispatch();\n  const handleChange = React.useCallback((event) => dispatch({ type: 'setStoryName', storyName: event.target.value }), [dispatch]);\n  const [editable, setEditable] = React.useState(false);\n  const onBlur = React.useCallback(() => setEditable(false), []);\n  const onKeyDown = React.useCallback((e) => {\n    if (e.keyCode === 13) onBlur();\n  }, [onBlur]);\n  const onClick = React.useCallback(() => setEditable(true), []);\n\n  return editable ? (\n    <TextField value={storyName} onChange={handleChange} autoFocus onBlur={onBlur} inputProps={inputProps} onKeyDown={onKeyDown} />\n  ) : (\n    <Tooltip title=\"Click to change the stories name\">\n      <Typography onClick={onClick}>\n        {storyName}\n      </Typography>\n    </Tooltip>\n  );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport { saveAs } from 'file-saver';\nimport Export from './export';\nimport Table from './table';\nimport { generateMD } from './export';\nimport StoryName from './story-name';\n\nfunction App() {\n  const { stories, storyName } = useSelector(state => ({\n    stories: state.stories, storyName: state.storyName,\n  }));\n  const exportMD = React.useCallback(() => {\n    const filename = \"data.md\";\n\n    const blob = new Blob([generateMD(stories, storyName)], {\n      type: 'text/plain;charset=utf-8'\n    });\n\n    saveAs(blob, filename);\n  }, [stories, storyName]);\n\n  return (\n    <div className=\"App\" style={{ width: '100vw', height: '100vh', backgroundColor: '#ECEFF1' }}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Story Creator\n          </Typography>\n          <StoryName />\n          <Tooltip title=\"Download a markdown file\">\n            <IconButton\n              onClick={exportMD}\n            >\n              <SaveAlt />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      {/* <h3 style={{ textAlign: 'center' }}>\n        Make stories by adding data into the table. Just click on any cell to enable editing mode.\n      </h3> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '55%', padding: '16px' }}>\n          <Table />\n        </div>\n        <div style={{ width: '45%', padding: '16px', paddingLeft: '0px' }}>\n          <Export />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}