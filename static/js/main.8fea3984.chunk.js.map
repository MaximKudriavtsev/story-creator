{"version":3,"sources":["reducers.js","tab-panel.js","utils/convert-to-md.js","preview-part.js","table.js","editable-part.js","story-name.js","App.js","serviceWorker.js","index.js"],"names":["initialState","storyName","goals","additional","stories","id","uuidv4","role","action","purpose","tests","text","getEmptyStory","getEmptyTest","children","value","index","padding","hidden","Box","p","Typography","data","name","result","trim","push","forEach","story","tableLine","map","test","testId","join","useSelector","state","React","tabValue","setTabValue","handleChange","event","markdown","convertToMD","Paper","AppBar","position","color","Tabs","onChange","aria-label","Tab","label","TextField","variant","multiline","style","width","dangerouslySetInnerHTML","__html","marked","getRowId","row","BooleanFormatter","BooleanTypeProvider","props","formatterComponent","DragHandle","SortableHandle","Tooltip","title","enterDelay","cursor","FocusableCell","onClick","restProps","column","Cell","tabIndex","onFocus","RowDetail","dispatch","useDispatch","useState","setText","addTest","useCallback","type","storyId","deleteTest","paddingBottom","length","Chip","key","onDelete","marginRight","e","target","Button","commandComponents","add","onExecute","IconButton","textAlign","delete","window","confirm","Command","CommandButton","columns","getCellValue","editingStateColumnExtensions","columnName","editingEnabled","tableColumnExtensions","wordWrapEnabled","align","editingCells","setEditingCells","addEmptyStory","onSortEnd","oldIndex","newIndex","arrayMove","Body","TableBody","SortableContainer","Table","useDragHandle","rows","for","onCommitChanges","added","changed","deleted","onEditingCellsChange","addedRows","onAddedRowsChange","columnExtensions","cellComponent","bodyComponent","rowComponent","TableRow","SortableElement","Row","indexOf","selectTextOnEditStart","showAddCommand","showDeleteCommand","commandComponent","contentComponent","goalsChange","additionalChange","placeholder","inputProps","select","editable","setEditable","onBlur","onKeyDown","keyCode","autoFocus","App","exportMD","blob","Blob","saveAs","className","height","backgroundColor","Toolbar","flexGrow","display","paddingLeft","Boolean","location","hostname","match","store","createStore","deletedSet","Set","nextStories","filter","has","reduce","acc","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8fea3984.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst defaultStoryName = 'Untitled Stories';\n\nconst initialState = {\n  storyName: defaultStoryName,\n  goals: '',\n  additional: '',\n  stories: [{\n    id: uuidv4(),\n    role: 'Story Tailer',\n    action: 'make stories',\n    purpose: 'make my work more convenient',\n    tests: [{\n      id: uuidv4(),\n      text: 'Open Story Creator App'\n    }, {\n      id: uuidv4(),\n      text: 'Enjoy 😃',\n    }]\n  }],\n}\n\nconst getEmptyStory = () => ({\n  id: uuidv4(),\n  role: '',\n  action: '',\n  purpose: '',\n  tests: [],\n});\n\nconst getEmptyTest = (text) => ({\n  id: uuidv4(),\n  text,\n});\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'setGoals': {\n      return { ...state, goals: action.goals };\n    }\n    case 'setAdditional': {\n      return { ...state, additional: action.additional };\n    }\n    case 'setStoryName': {\n      if (action.storyName.trim() === '') {\n        return { ...state, storyName: defaultStoryName };\n      }\n      return { ...state, storyName: action.storyName };\n    }\n    case 'setStories': {\n      return { ...state, stories: action.stories };\n    }\n    case 'addStory': { // OK\n      return {\n        ...state,\n        stories: [...state.stories, getEmptyStory()] \n      };\n    }\n    case 'deleteStory': { // OK\n      const deletedSet = new Set(action.deleted);\n      const nextStories = state.stories.filter(row => !deletedSet.has(row.id));\n\n      return {\n        ...state,\n        stories: nextStories,\n      };\n    }\n    case 'changeStory': { // OK\n      const nextStories = state.stories.map(row => (action.changed[row.id] ? { ...row, ...action.changed[row.id] } : row));\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    case 'addTest': { //OK\n      const nextStories = state.stories.reduce((acc, story) => {\n        if (action.storyId === story.id) {\n          story.tests.push(getEmptyTest(action.text));\n        }\n        acc.push(story);\n        return acc;\n      }, []);\n\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    case 'deleteTest': { // OK\n      const nextStories = state.stories.map((story) => {\n        if (story.id === action.storyId) {\n          story.tests = story.tests.filter(test => test.id !== action.testId);\n        } return story;\n      });\n\n      return {\n        ...state, stories: nextStories,\n      };\n    }\n    default:\n      return state;\n  }\n}","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default ({ children, value, index, padding = 3 }) => (\n  <div\n    hidden={value !== index}\n    id={`scrollable-auto-tabpanel-${index}`}\n  >\n    {value === index && (\n      <Box p={padding}>\n        <Typography>{children}</Typography>\n      </Box>\n    )}\n  </div>\n);","export default (data, name, goals, additional) => {\n  const result = [`## ${name}`];\n  !!goals.trim() && result.push(`\\n#### Goals\\n\\n${goals.trim()}`);\n  result.push('\\n#### User Stories');\n\n  data.forEach((story, id) => {\n    result.push(`${id + 1}. As a ${story.role.trim()}, I want to be able to ${story.action.trim()}, so that I can ${story.purpose.trim()}.`);\n  });\n\n  result.push('\\n#### Acceptance Criteria & Tests');\n  result.push('\\n| ID | Criteria | Test |');\n  result.push('| -- | :------- | :--- |');\n\n  data.forEach((story, id) => {\n    const tableLine = `| ${id + 1} | Capability to ${story.action.trim()}. | ${story.tests.map((test, testId) => `${testId + 1}. ${test.text.trim()}. `).join('')} |`;\n    result.push(tableLine);\n  });\n\n  !!additional.trim() && result.push(`\\n#### Additional\\n\\n${additional.trim()}`);\n\n  return result.join('\\n');\n};","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport marked from 'marked';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabPanel from './tab-panel';\nimport convertToMD from './utils/convert-to-md';\n\nexport default () => {\n  const { stories, storyName, goals, additional } = useSelector(state => ({\n    stories: state.stories,\n    storyName: state.storyName,\n    goals: state.goals,\n    additional: state.additional,\n  }));\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleChange = React.useCallback((event, value) => setTabValue(value), [setTabValue]);\n  const markdown = convertToMD(stories, storyName, goals, additional);\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Markdown\" />\n          <Tab label=\"Preview\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0}>\n        <TextField value={markdown} variant=\"outlined\" multiline style={{ width: '100%' }} />\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <div dangerouslySetInnerHTML={{__html: marked(markdown) }} />\n      </TabPanel>\n    </Paper>\n  );\n};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { EditingState, RowDetailState, DataTypeProvider } from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableEditColumn,\n  TableRowDetail,\n  TableInlineCellEditing,\n} from '@devexpress/dx-react-grid-material-ui';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport {\n  SortableContainer,\n  SortableHandle,\n  SortableElement,\n  arrayMove\n} from \"react-sortable-hoc\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Done from '@material-ui/icons/Done';\nimport Close from '@material-ui/icons/Close';\nimport DragIndicator from '@material-ui/icons/DragIndicator';\nimport PostAdd from '@material-ui/icons/PostAdd';\nimport Delete from '@material-ui/icons/Delete';\n\nconst getRowId = row => row.id;\n\nconst BooleanFormatter = ({ value }) => value ? <Done /> : <Close />;\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={BooleanFormatter}\n    {...props}\n  />\n);\n\nconst DragHandle = SortableHandle(({ style }) => (\n  <Tooltip title=\"Drag to reorder\" enterDelay={400}>\n    <span style={{ ...style, cursor: \"move\" }}><DragIndicator /></span>\n  </Tooltip>\n));\n\nconst FocusableCell = ({ onClick, ...restProps }) => {\n  if (restProps.column.name === \"drag\") {\n    return (\n      <Table.Cell {...restProps}>\n        <DragHandle />\n      </Table.Cell>\n    );\n  }\n  return <Table.Cell {...restProps} tabIndex={0} onFocus={onClick} style={{ ...restProps.style, cursor: 'pointer' }} />;\n}\n\nconst RowDetail = ({ row }) => {\n  const dispatch = useDispatch();\n  const [text, setText] = React.useState('');\n  const addTest = React.useCallback(() => {\n    setText('');\n    dispatch({ type: 'addTest', storyId: row.id, text });\n  }, [row, text, dispatch]);\n  const deleteTest = React.useCallback((testId) => dispatch({ type: 'deleteTest', testId, storyId: row.id }), [row, dispatch]);\n\n  return (\n    <div>\n      <div style={{ paddingBottom: '8px' }}>\n        {row.tests.length ? row.tests.map(test => (\n          <Chip\n            key={test.id}\n            label={test.text}\n            onDelete={() => deleteTest(test.id)}\n            style={{ marginRight: '8px' }}\n          />\n        )) : (\n          <p>\n            No tests here.\n          </p>\n        )}\n      </div>\n\n      <div>\n        <TextField variant=\"filled\" value={text} onChange={e => setText(e.target.value)} />\n        <Button color=\"primary\" onClick={addTest}>\n          Add\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst AddButton = ({ onExecute }) => (\n  <Tooltip title=\"Create a story\" enterDelay={500}>\n    <IconButton\n      style={{ textAlign: 'center' }}\n      onClick={onExecute}\n    >\n      <PostAdd\n        style={{ color: '#E91E63' }}\n      />\n    </IconButton>\n  </Tooltip>\n);\n\nconst DeleteButton = ({ onExecute }) => (\n  <Tooltip title=\"Delete the story\" enterDelay={500}>\n    <IconButton\n      onClick={() => {\n        // eslint-disable-next-line\n        if (window.confirm('Are you sure you want to delete this story?')) {\n          onExecute();\n        }\n      }}\n    >\n      <Delete />\n    </IconButton>\n  </Tooltip>\n);\n\nconst commandComponents = {\n  add: AddButton,\n  delete: DeleteButton,\n};\n\nconst Command = ({ id, onExecute }) => {\n  const CommandButton = commandComponents[id];\n  return (\n    <CommandButton\n      onExecute={onExecute}\n    />\n  );\n};\n\nconst columns = [\n  { name: 'role', title: 'Role' },\n  { name: 'action', title: 'Action' },\n  { name: 'purpose', title: 'Purpose' },\n  { name: 'tests', title: 'Tests', getCellValue: row => row.tests.length > 0 ? true : false },\n  { name: 'drag', title: ' ' },\n];\n\nconst editingStateColumnExtensions = [\n  { columnName: 'tests', editingEnabled: false },\n];\n\nconst tableColumnExtensions = [\n  { columnName: 'role', width: 150, wordWrapEnabled: true },\n  { columnName: 'action', wordWrapEnabled: true },\n  { columnName: 'purpose', wordWrapEnabled: true },\n  { columnName: 'tests', width: 55, align: 'center' },\n  { columnName: 'drag', width: 40, align: 'center' },\n];\n\nexport default () => {\n  const stories = useSelector(state => state.stories);\n  const dispatch = useDispatch();\n  const [editingCells, setEditingCells] = useState([]);\n  const addEmptyStory = React.useCallback(() => dispatch({ type: 'addStory' }), [dispatch]);\n  const onSortEnd = React.useCallback(({ oldIndex, newIndex }) =>\n    dispatch({ type: 'setStories', stories: arrayMove(stories, oldIndex, newIndex) }), [dispatch, stories]);\n  const Body = React.useCallback((props) => {\n    const TableBody = SortableContainer(Table.TableBody);\n    return (\n      <TableBody {...props} onSortEnd={onSortEnd} useDragHandle />\n    );\n  }, [onSortEnd]);\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    if (changed) {\n      dispatch({ type: 'changeStory', changed });\n    }\n    if (deleted) {\n      dispatch({ type: 'deleteStory', deleted });\n    }\n  };\n\n  return (\n    <Grid\n      rows={stories}\n      columns={columns}\n      getRowId={getRowId}\n    >\n      <BooleanTypeProvider for={['tests']} />\n\n      <RowDetailState />\n      <EditingState\n        onCommitChanges={commitChanges}\n        editingCells={editingCells}\n        onEditingCellsChange={setEditingCells}\n        addedRows={[]}\n        onAddedRowsChange={addEmptyStory}\n        columnExtensions={editingStateColumnExtensions}\n      />\n      <Table\n        columnExtensions={tableColumnExtensions}\n        cellComponent={FocusableCell}\n        bodyComponent={Body}\n        rowComponent={({ row, ...restProps }) => {\n          const TableRow = SortableElement(Table.Row);\n          return <TableRow {...restProps} row={row} index={stories.indexOf(row)} />;\n        }}  \n      />\n      <TableHeaderRow />\n      <TableInlineCellEditing selectTextOnEditStart />\n      <TableEditColumn\n        width={70}\n        showAddCommand\n        showDeleteCommand\n        commandComponent={Command}\n      />\n      <TableRowDetail\n        contentComponent={RowDetail}\n      />\n    </Grid>\n  );\n};\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from './table';\nimport TabPanel from './tab-panel';\n\nexport default () => {\n  const { goals, additional } = useSelector(state => ({\n    goals: state.goals,\n    additional: state.additional,\n  }));\n  const dispatch = useDispatch();\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleChange = React.useCallback((event, value) => setTabValue(value), [setTabValue]);\n  const goalsChange = React.useCallback(e => dispatch({ type: 'setGoals', goals: e.target.value }), [dispatch]);\n  const additionalChange = React.useCallback(e => dispatch({ type: 'setAdditional', additional: e.target.value }), [dispatch]);\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"User Stories\" />\n          <Tab label=\"Goals\" />\n          <Tab label=\"Additional\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0} padding={0}>\n        <Table />\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <TextField value={goals} onChange={goalsChange} variant=\"outlined\" multiline style={{ width: '100%' }} placeholder=\"Goals here...\" />\n      </TabPanel>\n      <TabPanel value={tabValue} index={2}>\n        <TextField value={additional} onChange={additionalChange} variant=\"outlined\" multiline style={{ width: '100%' }} placeholder=\"Additional data here...\" />\n      </TabPanel>\n    </Paper>\n  );\n};","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst onFocus = e => e.target.select();\nconst inputProps = { onFocus };\n\nexport default () => {\n  const storyName = useSelector(state => state.storyName);\n  const dispatch = useDispatch();\n  const handleChange = React.useCallback((event) => dispatch({ type: 'setStoryName', storyName: event.target.value }), [dispatch]);\n  const [editable, setEditable] = React.useState(false);\n  const onBlur = React.useCallback(() => setEditable(false), []);\n  const onKeyDown = React.useCallback((e) => {\n    if (e.keyCode === 13) onBlur();\n  }, [onBlur]);\n  const onClick = React.useCallback(() => setEditable(true), []);\n\n  return editable ? (\n    <TextField value={storyName} onChange={handleChange} autoFocus onBlur={onBlur} inputProps={inputProps} onKeyDown={onKeyDown} />\n  ) : (\n    <Tooltip title=\"Click to change the stories name\">\n      <Typography onClick={onClick} style={{ color: '#E91E63' }} >\n        {storyName}\n      </Typography>\n    </Tooltip>\n  );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport { saveAs } from 'file-saver';\nimport PreviewPart from './preview-part';\nimport EditablePart from './editable-part';\nimport convertToMD from './utils/convert-to-md';\nimport StoryName from './story-name';\n\nfunction App() {\n  const { stories, storyName, goals, additional } = useSelector(state => ({\n    stories: state.stories,\n    storyName: state.storyName,\n    goals: state.goals,\n    additional: state.additional,\n  }));\n  const exportMD = React.useCallback(() => {\n    const filename = \"data.md\";\n\n    const blob = new Blob([convertToMD(stories, storyName, goals, additional)], {\n      type: 'text/plain;charset=utf-8'\n    });\n\n    saveAs(blob, filename);\n  }, [stories, storyName, goals, additional]);\n\n  return (\n    <div className=\"App\" style={{ width: '100vw', height: '100vh', backgroundColor: '#ECEFF1' }}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Story Creator\n          </Typography>\n          <StoryName />\n          <Tooltip title=\"Download a markdown file\">\n            <IconButton\n              onClick={exportMD}\n            >\n              <SaveAlt />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      {/* <h3 style={{ textAlign: 'center' }}>\n        Make stories by adding data into the table. Just click on any cell to enable editing mode.\n      </h3> */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '55%', padding: '16px' }}>\n          <EditablePart />\n        </div>\n        <div style={{ width: '45%', padding: '16px', paddingLeft: '0px' }}>\n          <PreviewPart />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}